1) Use and understand Git!
2) UML at least 3 good diagrams. "good" means you can pump it up artificially as written in DDD. Please export the pics. I can not install all tools to view them!
3) DDD If your domain is too small, invent other domains around and document these domains (as if you have 5 Mio â‚¬ from Edlich-Investment!)
   Develop a clear strategic design with mappings/relationships
4) Metrics at least two. Sonarcube would be great
5) Clean Code Development at least 5 points you can show me + 10 points your cheat sheet
6) Build Management with any Build System as Ant, Maven, Gradle, etc. (only travis is perhaps not enough) Do e.g. generate Docs, call tests, etc.
7) Integrate some nice Unit-Tests in your Code to be integrated into the Build
8) Continuous Delivery show me your pipeline in e.g. Jenkins, Travis-CI, Circle-CI, GitHub Action, GitLab CI, etc.
9) Use a good IDE and get fluent with it as e.g. IntelliJ. What are your favorite Key-Shortcuts?!
10)DSL Create a small DSL Demo example snippet in your code even if it does not contribute to your project
11)Functional Programming (prove that you have covered all functional aspects in your code as
        only final data structures
        (mostly) side effect free functions
        the use of higher-order functions
        functions as parameters and return values
        use closures / anonymous functions